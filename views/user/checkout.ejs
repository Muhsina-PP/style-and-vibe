<%- include("../../views/partial/user/header") %>
<style>
  body {
    background-color: #f8f9fa;
  }

  main.container {
    background-color: #fff;
    padding: 2rem;
    border-radius: 16px;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.05);
  }

  h2 {
    font-weight: 700;
    color: #333;
  }

  form h4 {
    margin-bottom: 1rem;
    color: #495057;
    font-weight: 600;
  }

  .form-label {
    font-weight: 500;
  }

  .list-group-item {
    border: none;
    border-bottom: 1px solid #e9ecef;
    background-color: transparent;
  }

  .list-group-item:last-child {
    border-bottom: none;
  }

  .btn-success {
    font-weight: 600;
    font-size: 1.1rem;
    padding: 0.6rem;
    border-radius: 10px;
  }

  .form-check-input {
    margin-top: 0.4rem;
  }

  .text-muted {
    color: #6c757d !important;
  }

  .address-card {
    border: 1px solid #e9ecef;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
    cursor: pointer;
    transition: all 0.2s;
  }

  .address-card:hover {
    border-color: #6c757d;
  }

  .address-card.selected {
    border-color: #28a745;
    background-color: #f0fff4;
  }

  .address-actions {
    display: flex;
    gap: 10px;
    margin-top: 10px;
  }

  .address-actions button {
    padding: 5px 10px;
    font-size: 0.9rem;
  }

  .new-address-btn {
    margin-bottom: 15px;
  }

  .product-image {
    width: 50px;
    height: 50px;
    object-fit: contain;
    margin-right: 10px;
  }

  /* Additional styles for toggle functionality */
  #newAddressForm {
    display: none;
    margin-top: 20px;
    padding: 15px;
    border: 1px solid #e9ecef;
    border-radius: 8px;
    background-color: #f8f9fa;
  }

  @media (max-width: 768px) {
    main.container {
      padding: 1rem;
    }
    h2 {
      font-size: 1.5rem;
    }
    .btn-success {
      font-size: 1rem;
    }
  }
</style>

<!-- Main Checkout Section -->
<main class="main container mt-5">
  <h2 class="text-center fw-bold mb-4">ðŸ§¾ Checkout</h2>

  <form  action="/place-order" method="POST" class="row g-4" id="checkoutForm">
    <!-- Shipping Address -->
    <div class="col-md-6">
      <h4>ðŸ“¦ Shipping Address</h4>

      <div id="addressSelection">
        <% if(addresses && addresses.length > 0) { %>
          <% addresses.forEach((address, index) => { %>
            <div class="address-card <%= address.isDefault ? 'selected' : '' %>" onclick="selectAddress(this, '<%= address._id %>')">
              <div class="form-check">
                <input class="form-check-input" type="radio" name="selectedAddressId" value="<%= address._id %>" 
                  id="address<%= index %>" <%= address.isDefault ? 'checked' : '' %>>
                <label class="form-check-label" for="address<%= index %>">
                  <strong><%= address.name %></strong>
                </label>
              </div>
              <p class="mb-1"><%= address.addressType  %></p>
              <% if(address.addressLine2) { %>
                <p class="mb-1"><%= address.landMark  %></p>
              <% } %>
              <p class="mb-1"><%= address.city %>, <%= address.state %> <%= address.pincode %></p>
              <p class="mb-2">Phone: <%= address.phone %></p> Alt Phone: <%= address.altphone %></p>
              <div class="address-actions">
                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="editAddress('<%= address._id %>')">Edit</button>
              </div>
            </div>
          <% }); %>
        <% } %>
        
        <button type="button" class="btn btn-outline-primary new-address-btn" onclick="showNewAddressForm()">
          + Add New Address
        </button>
      </div>

      <!-- New Address Form -->
      <div id="newAddressForm" style="display: none;">
        <input type="hidden" id="editAddressId" name="editAddressId" value="">
        <div id="addressFormErrors" class="alert alert-danger" style="display: none;"></div>

        <div class="mb-3">
          <label for="addressType" class="form-label">Address Type:</label>
          <input type="text" class="form-control border-3" id="addressType" name="addressType" placeholder="Home or Work" required>
          <div class="invalid-feedback">Please enter address type</div>
        </div>
        <div class="mb-3">
          <label for="name" class="form-label">Name</label>
          <input type="text" class="form-control border-3" id="name" name="name" required>
          <div class="invalid-feedback">Please enter a name</div>
        </div>
        <div class="mb-3">
          <label for="landMark" class="form-label">Land Mark</label>
          <input type="text" class="form-control border-3" id="landMark" name="landMark" required>
          <div class="invalid-feedback">Please enter a landmark</div>
        </div> 
        <div class="mb-3">
          <label for="city" class="form-label">City</label>
          <input type="text" class="form-control border-3" id="city" name="city" required>
          <div class="invalid-feedback">Please enter a city</div>
        </div>
        <div class="mb-3">
          <label for="state" class="form-label">State</label>
          <input type="text" class="form-control border-3" id="state" name="state" required>
          <div class="invalid-feedback">Please enter a state</div>
        </div>
        <div class="mb-3">
          <label for="pincode" class="form-label">Pincode</label>
          <input type="text" class="form-control border-3" id="pincode" name="pincode" required>
          <div class="invalid-feedback">Please enter a valid pincode</div>
        </div>
        <div class="mb-3">
          <label for="phone" class="form-label">Phone</label>
          <input type="tel" class="form-control border-3" id="phone" name="phone" required>
          <div class="invalid-feedback">Please enter a valid phone number</div>
        </div>
        <div class="mb-3">
          <label for="altphone" class="form-label">Alternative Phone</label>
          <input type="tel" class="form-control border-3" id="altphone" name="altphone" required>
          <div class="invalid-feedback">Please enter a valid alternative phone number</div>
        </div>
        <div class="mb-3 form-check">
          <input type="checkbox" name="isDefault" id="isDefault" class="form-check-input" value="true">
          <label class="form-check-label" for="isDefault">Set as default address</label>
        </div>
        
        <div class="d-flex gap-2">
          <button type="button" class="btn btn-primary" onclick="validateAndSaveAddress()">Save Address</button>
          <button type="button" class="btn btn-outline-secondary" onclick="cancelAddressForm()">Cancel</button>
        </div>
      </div>
    </div>

    <!-- Order Summary -->
    <div class="col-md-6">
      <h4>ðŸ›’ Order Summary</h4>
      <ul class="list-group mb-3">
        <% cartItems.forEach(item => { %>
          <li class="list-group-item d-flex justify-content-between lh-sm py-3">
            <div class="d-flex">
              <% if (item.productId && item.productId.productImage && item.productId.productImage.length > 0) { %>
                  <img src="/uploads/re-image/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" class="product-image">
                <% } else { %>
                  <div class="product-image bg-light d-flex align-items-center justify-content-center">
                    <span class="text-muted">No image</span>
                  </div>
                <% } %>

              <div>
                <% if (item.productId) { %>
                  <h6 class="my-0"><%= item.productId.productName %></h6>
                  <small class="text-muted">
                    <% if (item.productId.brand) { %>Brand: <%= item.productId.brand %><br><% } %>
                    Qty: <%= item.quantity %>
                  </small>
                <% } else { %>
                  <h6 class="my-0">Product not available</h6>
                  <small class="text-muted">Qty: <%= item.quantity %></small>
                <% } %>
              </div>
            </div>
            <div class="text-end">
              <span>â‚¹<%= item.totalPrice ? item.totalPrice.toFixed(2) : '0.00' %></span>
              <% if (item.discount && item.discount > 0) { %>
                <br><small class="text-success">-â‚¹<%= item.discount.toFixed(2) %> off</small>
              <% } %>
            </div>
          </li>
        <% }) %>
        <li class="list-group-item d-flex justify-content-between">
          <span>Subtotal</span>
          <span>â‚¹<%= subtotal ? subtotal.toFixed(2) : total.toFixed(2) %></span>
        </li>
        <% if (totalDiscount && totalDiscount > 0) { %>
        <li class="list-group-item d-flex justify-content-between text-success">
          <span>Discount</span>
          <span>-â‚¹<%= totalDiscount.toFixed(2) %></span>
        </li>
        <% } %>
        <li class="list-group-item d-flex justify-content-between">
          <strong>Total</strong>
          <strong>â‚¹<%= total.toFixed(2) %></strong>
        </li>
      </ul>

      <!-- Payment Method -->
      <div class="mb-3">
        <div class="form-check">
          <input class="form-check-input" type="radio" name="paymentMethod" value="UPI" id="upi" >
          <label class="form-label fw-bold" for="upi">ðŸ’³ Payment Method</label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" name="paymentMethod" value="COD" id="cod" checked>
          <label class="form-check-label" for="cod">Cash on Delivery</label>
        </div>
      </div>

     
        <button id="placeorder" class="btn btn-success w-100">Place Order</button>      
    </div>
  </form>
</main>

<!-- JavaScript -->
<script>
  const orderbutton = document.getElementById("placeorder")
  const form = document.getElementById('checkoutForm')
  orderbutton.addEventListener('click',()=>{
    form.submit()
  })
  function showNewAddressForm() {
    document.getElementById('editAddressId').value = '';
    resetAddressForm();
    document.getElementById('newAddressForm').style.display = 'block';
  }

  function cancelAddressForm() {
    document.getElementById('newAddressForm').style.display = 'none';
    resetAddressForm();
  }

  function selectAddress(element, addressId) {
    document.querySelectorAll('.address-card').forEach(card => card.classList.remove('selected'));
    element.classList.add('selected');
    document.querySelector(`input[value="${addressId}"]`).checked = true;
  }

  function editAddress(addressId) {
    event.stopPropagation();
    window.location.href = `/editAddress/${addressId}`;
  }

  function validateAndSaveAddress() {
    const errorsDiv = document.getElementById('addressFormErrors');
    errorsDiv.style.display = 'none';
    errorsDiv.innerHTML = '';
    
    const errors = [];
    
    // Get all form values
    const addressType = document.getElementById('addressType').value.trim();
    const name = document.getElementById('name').value.trim();
    const landMark = document.getElementById('landMark').value.trim();
    const city = document.getElementById('city').value.trim();
    const state = document.getElementById('state').value.trim();
    const pincode = document.getElementById('pincode').value.trim();
    const phone = document.getElementById('phone').value.trim();
    const altphone = document.getElementById('altphone').value.trim();
    
    // Validate required fields
    // if (!addressType) errors.push('Address type is required');
    // if (!name) errors.push('Name is required');
    // if (!landMark) errors.push('Landmark is required');
    // if (!city) errors.push('City is required');
    // if (!state) errors.push('State is required');
    
    // // Validate pincode (6 digits for Indian pincode)
    // if (!pincode) {
    //   errors.push('Pincode is required');
    // } else if (!/^\d{6}$/.test(pincode)) {
    //   errors.push('Pincode must be 6 digits');
    // }
    
    // Validate phone number (10 digits for Indian phone)
    // if (!phone) {
    //   errors.push('Phone number is required');
    // } else if (!/^\d{10}$/.test(phone)) {
    //   errors.push('Phone number must be 10 digits');
    // }
    
    // Validate alternative phone if provided
    // if (altphone && !/^\d{10}$/.test(altphone)) {
    //   errors.push('Alternative phone number must be 10 digits');
    // }
    
    // Display errors if any
    // if (errors.length > 0) {
    //   errorsDiv.innerHTML = errors.map(error => `<div>${error}</div>`).join('');
    //   errorsDiv.style.display = 'block';
    //   return;
    // }
    
    // If validation passes, proceed with saving
    saveAddress();
  }

  function saveAddress() {
    const addressId = document.getElementById('editAddressId').value;
    
    const addressData = {
      addressType: document.getElementById('addressType').value.trim(),
      name: document.getElementById('name').value.trim(),
      landMark: document.getElementById('landMark').value.trim(),
      city: document.getElementById('city').value.trim(),
      state: document.getElementById('state').value.trim(),
      pincode: document.getElementById('pincode').value.trim(),
      phone: document.getElementById('phone').value.trim(),
      altphone: document.getElementById('altphone').value.trim(),
      isDefault: document.getElementById('isDefault').checked
    };

    fetch('/addAddress', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(addressData)
    })
    .then(response => {
      // Check if we got a redirect (your controller uses res.redirect)
      if (response.redirected) {
        showSuccessAlert('Address saved successfully');
        setTimeout(() => {
          window.location.href = response.url;
        }, 1500);
        return { success: true };
      }
      
      // If not redirected, try to parse as JSON
      if (response.headers.get('content-type')?.includes('application/json')) {
        return response.json();
      } else {
        // If response is successful but not JSON or redirect, consider it success
        if (response.ok) {
          showSuccessAlert('Address saved successfully');
          setTimeout(() => {
            location.reload();
          }, 1500);
          return { success: true };
        } else {
          throw new Error('Network response was not ok');
        }
      }
    })
    .then(data => {
      if (data && !data.success) {
        showErrorAlert(data.message || 'Failed to save address');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      // Don't show error if already being redirected (which means success)
      if (!document.hidden) {
        showSuccessAlert('Address saved successfully');
        setTimeout(() => {
          location.reload();
        }, 1500);
      }
    });
  }

function resetAddressForm() {
    const formFields = ['addressType', 'name', 'landMark', 'city', 'state', 'pincode', 'phone', 'altphone'];
    formFields.forEach(id => {
      const field = document.getElementById(id);
      if (field) field.value = '';
    });
    document.getElementById('isDefault').checked = false;
    document.getElementById('addressFormErrors').style.display = 'none';
    document.getElementById('addressFormErrors').innerHTML = '';
  }

  function showSuccessAlert(message) {
    Swal.fire({
      title: 'Success',
      text: message,
      icon: 'success',
      confirmButtonText: 'OK'
    });
  }

  function showErrorAlert(message) {
    Swal.fire({
      title: 'Error',
      text: message,
      icon: 'error',
      confirmButtonText: 'OK'
    });
  }
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
