<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    /* Scoped styles for order detail page */
    .order-detail-container * {
        box-sizing: border-box;
    }

    .order-detail-container {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 20px;
        margin: 0;
        width: 100%;
    }

    .order-detail-container .container {
        max-width: 1200px;
        margin: 0 auto;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    /* Header Section */
    .order-detail-container .header {
        background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
        color: white;
        padding: 30px 40px;
        position: relative;
    }

    .order-detail-container .header-content {
        position: relative;
        z-index: 1;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 20px;
    }

    .order-detail-container .header-left h1 {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 10px;
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .order-detail-container .header-left .order-id {
        font-family: 'Courier New', monospace;
        background: rgba(255, 255, 255, 0.2);
        padding: 5px 15px;
        border-radius: 25px;
        font-size: 1.2rem;
    }

    .order-detail-container .header-right {
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .order-detail-container .btn {
        padding: 12px 20px;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        font-size: 14px;
        font-weight: 600;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

    .order-detail-container .btn-back {
        background: rgba(255, 255, 255, 0.2);
        color: white;
        border: 2px solid rgba(255, 255, 255, 0.3);
    }

    .order-detail-container .btn-print {
        background: rgba(255, 255, 255, 0.9);
        color: #2c3e50;
    }

    .order-detail-container .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    /* Status Badge */
    .order-detail-container .status-badge {
        display: inline-block;
        padding: 8px 20px;
        border-radius: 25px;
        font-size: 14px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .order-detail-container .status-pending { background: linear-gradient(135deg, #f39c12 0%, #e67e22 100%); color: white; }
    .order-detail-container .status-processing { background: linear-gradient(135deg, #3498db 0%, #2980b9 100%); color: white; }
    .order-detail-container .status-shipped { background: linear-gradient(135deg, #9b59b6 0%, #8e44ad 100%); color: white; }
    .order-detail-container .status-delivered { background: linear-gradient(135deg, #27ae60 0%, #229954 100%); color: white; }
    .order-detail-container .status-cancelled { background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%); color: white; }

    /* Main Content */
    .order-detail-container .main-content {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 30px;
        padding: 40px;
        background: white;
    }

    .order-detail-container .left-section {
        display: flex;
        flex-direction: column;
        gap: 30px;
    }

    .order-detail-container .right-section {
        display: flex;
        flex-direction: column;
        gap: 30px;
    }

    /* Card Styles */
    .order-detail-container .card {
        background: white;
        border-radius: 15px;
        padding: 25px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        border: 1px solid #f1f3f4;
    }

    .order-detail-container .card-header {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid #f1f3f4;
    }

    .order-detail-container .card-header h3 {
        font-size: 1.4rem;
        color: #2c3e50;
        margin: 0;
    }

    .order-detail-container .card-header i {
        font-size: 1.2rem;
        color: #3498db;
    }

    /* Order Items Table */
    .order-detail-container .items-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
    }

    .order-detail-container .items-table th,
    .order-detail-container .items-table td {
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid #f1f3f4;
    }

    .order-detail-container .items-table th {
        background: #f8f9fa;
        font-weight: 600;
        color: #2c3e50;
        text-transform: uppercase;
        font-size: 12px;
        letter-spacing: 0.5px;
    }

    .order-detail-container .items-table td {
        vertical-align: middle;
    }

    .order-detail-container .product-info {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .order-detail-container .product-image {
        width: 60px;
        height: 60px;
        border-radius: 8px;
        object-fit: cover;
        background: #f8f9fa;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #6c757d;
    }

    .order-detail-container .product-details h4 {
        margin: 0 0 5px 0;
        color: #2c3e50;
        font-size: 14px;
    }

    .order-detail-container .product-details p {
        margin: 0;
        color: #6c757d;
        font-size: 12px;
    }

    .order-detail-container .quantity-badge {
        background: #e3f2fd;
        color: #1976d2;
        padding: 5px 12px;
        border-radius: 15px;
        font-weight: 600;
        font-size: 12px;
    }

    .order-detail-container .price {
        font-weight: 600;
        color: #27ae60;
        font-size: 14px;
    }

    /* Order Summary */
    .order-detail-container .summary-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 0;
        border-bottom: 1px solid #f1f3f4;
    }

    .order-detail-container .summary-row:last-child {
        border-bottom: none;
        font-weight: 700;
        font-size: 1.1rem;
        color: #2c3e50;
        padding-top: 15px;
        border-top: 2px solid #f1f3f4;
    }

    .order-detail-container .summary-row.total {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        margin: 15px -25px -25px -25px;
        padding: 20px 25px;
        border-radius: 0 0 15px 15px;
    }

    /* Info Grid */
    .order-detail-container .info-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
    }

    .order-detail-container .info-item {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

    .order-detail-container .info-label {
        font-size: 12px;
        color: #6c757d;
        text-transform: uppercase;
        font-weight: 600;
        letter-spacing: 0.5px;
    }

    .order-detail-container .info-value {
        font-size: 14px;
        color: #2c3e50;
        font-weight: 500;
    }

    /* Address Card */
    .order-detail-container .address-card {
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 10px;
        padding: 20px;
        margin-top: 15px;
    }

    .order-detail-container .address-card h4 {
        margin: 0 0 10px 0;
        color: #2c3e50;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .order-detail-container .address-text {
        color: #495057;
        line-height: 1.5;
        margin: 0;
    }

    /* Timeline */
    .order-detail-container .timeline {
        position: relative;
        padding-left: 30px;
    }

    .order-detail-container .timeline::before {
        content: '';
        position: absolute;
        left: 15px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: #e9ecef;
    }

    .order-detail-container .timeline-item {
        position: relative;
        padding-bottom: 25px;
    }

    .order-detail-container .timeline-item::before {
        content: '';
        position: absolute;
        left: -23px;
        top: 5px;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: #3498db;
        border: 3px solid white;
        box-shadow: 0 0 0 2px #3498db;
    }

    .order-detail-container .timeline-item.completed::before {
        background: #27ae60;
        box-shadow: 0 0 0 2px #27ae60;
    }

    .order-detail-container .timeline-item.current::before {
        background: #f39c12;
        box-shadow: 0 0 0 2px #f39c12;
        animation: pulse 2s infinite;
    }

    .order-detail-container .timeline-content h4 {
        margin: 0 0 5px 0;
        color: #2c3e50;
        font-size: 14px;
    }

    .order-detail-container .timeline-content p {
        margin: 0;
        color: #6c757d;
        font-size: 12px;
    }

    /* Payment Info */
    .order-detail-container .payment-method {
        display: flex;
        align-items: center;
        gap: 10px;
        background: #f8f9fa;
        padding: 15px;
        border-radius: 10px;
        margin-top: 15px;
    }

    .order-detail-container .payment-icon {
        width: 40px;
        height: 40px;
        background: #3498db;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 18px;
    }

    /* Action Buttons */
    .order-detail-container .action-section {
        margin-top: 30px;
        padding: 25px;
        background: #f8f9fa;
        border-radius: 15px;
    }

    .order-detail-container .action-buttons {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
    }

    .order-detail-container .btn-primary {
        background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
        color: white;
    }

    .order-detail-container .btn-secondary {
        background: linear-gradient(135deg, #95a5a6 0%, #7f8c8d 100%);
        color: white;
    }

    .order-detail-container .btn-danger {
        background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
        color: white;
    }

    /* Animations */
    @keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.2); }
    }

    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }

    .order-detail-container .card {
        animation: fadeIn 0.6s ease forwards;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .order-detail-container {
            padding: 10px;
        }

        .order-detail-container .main-content {
            grid-template-columns: 1fr;
            padding: 20px;
            gap: 20px;
        }

        .order-detail-container .header-content {
            flex-direction: column;
            align-items: stretch;
        }

        .order-detail-container .header-left h1 {
            font-size: 2rem;
        }

        .order-detail-container .info-grid {
            grid-template-columns: 1fr;
        }

        .order-detail-container .items-table {
            font-size: 12px;
        }

        .order-detail-container .product-info {
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
        }

        .order-detail-container .action-buttons {
            flex-direction: column;
        }
    }

    /* Print Styles */
    @media print {
        .order-detail-container .header-right,
        .order-detail-container .action-section {
            display: none;
        }
        
        .order-detail-container {
            background: white;
            padding: 0;
        }
        
        .order-detail-container .card {
            box-shadow: none;
            border: 1px solid #ccc;
        }
    }
    .itemImage{
      max-width: 50%;
    }
    .badge {
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  font-weight: bold;
}
.bg-secondary { background-color: #6c757d; color: white; }
.bg-info { background-color: #17a2b8; color: white; }
</style>

<div class="order-detail-container">
    <div class="container">
        <!-- Header -->
        <div class="header">
            <div class="header-content">
                <div class="header-left">
                    <h1>
                        <i class="fas fa-receipt"></i>
                        Order Details
                    </h1>
                    <div class="order-id">#<%= typeof order !== 'undefined' ? order.orderId : 'ORD-2024-0001' %></div>
                </div>
                <div class="header-right">
                    <a href="/my-orders" class="btn btn-back">
                        <i class="fas fa-arrow-left"></i>
                        Back to Orders
                    </a>
                    <!-- <a href="#" class="btn btn-print"><i class="fas fa-print"></i>Download Invoice</a> -->
                    <button onclick="handleDownload()" class="btn btn-print">
                        <i class="fas fa-print"></i>
                        Print
                    </button>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Left Section -->
            <div class="left-section">
                <!-- Order Items -->
                <div class="card">
                    <div class="card-header">
                        <i class="fas fa-shopping-bag"></i>
                        <h3>Order Items</h3>
                    </div>
                    <table class="items-table">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Total</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            
                            
                        
                                <% order.orderedItems.forEach(function(item) { %>
                                <tr>
                                    <td>
                                        <div class="product-info">
                                            <div class="product-image">
                                                <% if (item.product && item.product.productImage) { %>
                                                    <img class="itemImage" src="/uploads/re-image/<%= item.product.productImage[0] %>" alt="Product Image">
                                                <% } else { %>
                                                    <i class="fas fa-image"></i>
                                                <% } %>
                                            </div>
                                            <div class="product-details">
                                                <h4><%= item.product ? item.product.productName : (item.productName || 'Product Name') %></h4>
                                                <!-- <p> <%= item.product ? item.product.productName : (item.productId || 'N/A') %></p> -->
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="quantity-badge">
                                            <%= item.quantity || 1 %>
                                        </span>
                                    </td>
                                    <td class="price">$<%= item.price ? item.price.toFixed(2) : '0.00' %></td>
                                    <td class="price">$<%= item.total ? item.total.toFixed(2) : (item.price * item.quantity).toFixed(2) %></td>
                                  
                                   <td>
                                        <% if (item.status === "Returned") { %>
                                            <!-- Already returned -->
                                            <span class="badge bg-success">Returned</span>

                                        <% } else if (item.status === "Return Requested") { %>
                                            <!-- Return already requested -->
                                            <span class="badge bg-warning">Return Requested</span>

                                        <% } else if (item.status === "Cancelled") { %>
                                            <!-- Already cancelled -->
                                            <span class="badge bg-secondary">Cancelled</span>

                                        <% } else if (item.status === "Delivered") { %>
                                            <!-- Button that triggers return modal -->
                                            <button type="button" 
                                                class="btn btn-danger btn-sm return-btn"
                                                data-order-id="<%= order._id %>" 
                                                data-product-id="<%= item.product._id %>">
                                                Request Return
                                            </button>

                                        <% } else if (item.status === "Ordered" || item.status === "Processing" || item.status === "Shipped" || item.status === "Out Of Delivery") { %>
                                            <!-- Order is not delivered yet, allow cancel -->
                                            <button 
                                                class="btn btn-sm btn-warning cancel-btn"
                                                data-order-id="<%= order._id %>"
                                                data-product-id="<%= item.product._id %>">
                                                Cancel
                                            </button>
                                        <% } else { %>
                                            <!-- For any other status -->
                                            <span class="badge bg-info"><%= item.status %></span>
                                        <% } %>
                                </td>

                                </tr>
                                <% }); %>
                           
                        </tbody>
                    </table>
                </div>

                <!-- Shipping Address -->
                <div class="card">
                    <div class="card-header">
                        <i class="fas fa-map-marker-alt"></i>
                        <h3>Shipping Address</h3>
                    </div>
                    <div class="address-card">
                        <h4><i class="fas fa-user"></i> <%= order.address ? order.address.name : (order.shippingAddress ? order.shippingAddress.name : 'Customer Name') %></h4>
                        <p class="address-text">
                            <%= order.address ? order.address.addressType : (order.shippingAddress ? order.shippingAddress.addressType : '123 Main Street') %><br>
                            <%= order.address ? order.address.landMark : (order.shippingAddress ? order.shippingAddress.landMark : '123 Main Street') %><br>
                            <%= order.address ? order.address.city : (order.shippingAddress ? order.shippingAddress.city : 'Mumbai') %>, 
                            <%= order.address ? order.address.state : (order.shippingAddress ? order.shippingAddress.state : 'Maharashtra') %> 
                            <%= order.address ? order.address.pincode : (order.shippingAddress ? order.shippingAddress.pincode : '400001') %><br>
                            <i class="fas fa-phone"></i> <%= order.address ? order.address.phone : (order.shippingAddress ? order.shippingAddress.phone : '+91 98765 43210') %>
                            <i class="fas fa-phone"></i> <%= order.address ? order.address.altphone : (order.shippingAddress ? order.shippingAddress.altphone : '+91 98765 43210') %>
                        </p>
                    </div>
                </div>
            </div>

            <!-- Right Section -->
            <div class="right-section">
                <!-- Order Summary -->
                <!-- <div class="card">
                    <div class="card-header">
                        <i class="fas fa-calculator"></i>
                        <h3>Order Summary</h3>
                    </div>
                    <div class="summary-row">
                        <span>Subtotal:</span>
                        <span class="price">$<%= order.subtotal ? order.subtotal.toFixed(2) : '0.00' %></span>
                    </div>
                    <div class="summary-row">
                        <span>Shipping:</span>
                        <span class="price">$<%= order.shippingCost ? order.shippingCost.toFixed(2) : '0.00' %></span>
                    </div>
                    <div class="summary-row">
                        <span>Tax:</span>
                        <span class="price">$<%= order.tax ? order.tax.toFixed(2) : '0.00' %></span>
                    </div>
                    <div class="summary-row total">
                        <span>Total:</span>
                        <span class="price">$<%= order.totalPrice ? order.totalPrice.toFixed(2) : '0.00' %></span>
                    </div>
                </div> -->

                <!-- Order Information -->
                <div class="card">
                    <div class="card-header">
                        <i class="fas fa-info-circle"></i>
                        <h3>Order Information</h3>
                    </div>
                    <div class="info-grid">
                        <div class="info-item">
                            <span class="info-label">Order Date</span>
                            <span class="info-value">
                                <%= new Date(order.createdOn || new Date()).toLocaleDateString('en-US', { 
                                    year: 'numeric', 
                                    month: 'long', 
                                    day: 'numeric' 
                                }) %>
                            </span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Status</span>
                            <span class="status-badge status-<%= order.status || 'pending' %>">
                                <% if (order.status === 'pending') { %>
                                    <i class="far fa-clock"></i>
                                <% } else if (order.status === 'processing') { %>
                                    <i class="fas fa-cog"></i>
                                <% } else if (order.status === 'shipped') { %>
                                    <i class="fas fa-shipping-fast"></i>
                                <% } else if (order.status === 'delivered') { %>
                                    <i class="fas fa-check-circle"></i>
                                <% } else if (order.status === 'cancelled') { %>
                                    <i class="fas fa-times-circle"></i>
                                <% } %>
                                <%= order.status || 'pending' %>
                            </span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Payment Method</span>
                            <span class="info-value"><%= order.paymentMethod || 'COD' %></span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Payment Status</span>
                            <span class="info-value"><%= order.paymentStatus || 'Pending' %></span>
                        </div>
                    </div>

                    <!-- Payment Method Details -->
                    <div class="payment-method">
                        <div class="payment-icon">
                            <% if (order.paymentMethod === 'Credit Card') { %>
                                <i class="fas fa-credit-card"></i>
                            <% } else if (order.paymentMethod === 'PayPal') { %>
                                <i class="fab fa-paypal"></i>
                            <% } else if (order.paymentMethod === 'Cash on Delivery') { %>
                                <i class="fas fa-money-bill-wave"></i>
                            <% } else { %>
                                <i class="fas fa-wallet"></i>
                            <% } %>
                        </div>
                        <div>
                            <h4><%= order.paymentMethod || 'Payment Method' %></h4>
                            <p>Status: <%= order.paymentStatus || 'Pending' %></p>
                        </div>
                    </div>
                </div>

                <!-- Order Timeline -->
                <!-- <div class="card">
                    <div class="card-header">
                        <i class="fas fa-history"></i>
                        <h3>Order Timeline</h3>
                    </div>
                    <div class="timeline">
                        <div class="timeline-item completed">
                            <div class="timeline-content">
                                <h4>Order Placed</h4>
                                <p><%= new Date(order.createdOn || new Date()).toLocaleDateString() %></p>
                            </div>
                        </div>
                        <div class="timeline-item <%= order.status === 'processing' ? 'current' : (order.status !== 'pending' ? 'completed' : '') %>">
                            <div class="timeline-content">
                                <h4>Order Processing</h4>
                                <p>Preparing your items</p>
                            </div>
                        </div>
                        <div class="timeline-item <%= order.status === 'shipped' ? 'current' : (order.status === 'delivered' ? 'completed' : '') %>">
                            <div class="timeline-content">
                                <h4>Shipped</h4>
                                <p>Your order is on the way</p>
                            </div>
                        </div>
                        <div class="timeline-item <%= order.status === 'delivered' ? 'current completed' : '' %>">
                            <div class="timeline-content">
                                <h4>Delivered</h4>
                                <p>Order completed successfully</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div> -->

        <!-- Action Section -->
        <!-- <div class="action-section">
            <h3 style="margin-bottom: 20px; color: #2c3e50;">
                <i class="fas fa-tools"></i> Order Actions
            </h3>
            <div class="action-buttons">
                <% if (order.status === 'pending') { %>
                    <button class="btn btn-primary" onclick="updateOrderStatus('processing')">
                        <i class="fas fa-play"></i>
                        Start Processing
                    </button>
                    <button class="btn btn-danger" onclick="updateOrderStatus('cancelled')">
                        <i class="fas fa-times"></i>
                        Cancel Order
                    </button>
                <% } else if (order.status === 'processing') { %>
                    <button class="btn btn-primary" onclick="updateOrderStatus('shipped')">
                        <i class="fas fa-shipping-fast"></i>
                        Mark as Shipped
                    </button>
                    <button class="btn btn-danger" onclick="updateOrderStatus('cancelled')">
                        <i class="fas fa-times"></i>
                        Cancel Order
                    </button>
                <% } else if (order.status === 'shipped') { %>
                    <button class="btn btn-primary" onclick="updateOrderStatus('delivered')">
                        <i class="fas fa-check"></i>
                        Mark as Delivered
                    </button>
                <% } %> -->
                
                <!-- <button class="btn btn-secondary" onclick="sendNotification()">
                    <i class="fas fa-envelope"></i>Cancel Order</button> -->

                

<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".return-btn").forEach(button => {
      button.addEventListener("click", async () => {
        const orderId = button.getAttribute("data-order-id");
        const productId = button.getAttribute("data-product-id");

        const { value: reason } = await Swal.fire({
          title: "Request Return",
          input: "textarea",
          inputLabel: "Reason for Return",
          inputPlaceholder: "Enter your reason here...",
          inputAttributes: { 'aria-label': "Reason" },
          showCancelButton: true,
          confirmButtonText: "Submit Request",
          cancelButtonText: "Cancel",
          inputValidator: (value) => {
            if (!value) return "Please enter a reason!";
          }
        });
        if (reason) {
          fetch(`/order/${orderId}/return/${productId}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({ reason })
          })
          .then(res => res.json())
          .then(data => {
            if (data.success) {
              Swal.fire("Success!", "Your return request has been submitted.", "success")
                .then(() => window.location.reload());
            } else {
              Swal.fire("Error", data.message || "Something went wrong.", "error");
            }
          })
          .catch(() => Swal.fire("Error", "Server error occurred.", "error"));
        }
      });
    });
  });
</script>
              
<script>
    
  function handleDownload(){
    const urlParts = window.location.pathname.split('/');
    const orderId = urlParts[urlParts.length - 1];
    if (orderId) {
      window.location.href = `/download-invoice/${orderId}`;
    } else {
      alert("Order ID not found in URL");
    }

    
  }
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".cancel-btn").forEach(button => {
    button.addEventListener("click", async () => {
      const orderId = button.getAttribute("data-order-id");
      const productId = button.getAttribute("data-product-id");

      const confirmed = await Swal.fire({
        title: "Are you sure?",
        text: "This product will be cancelled from the order.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Yes, cancel it!",
        cancelButtonText: "No"
      });

      if (confirmed.isConfirmed) {
        // Show loading
        Swal.fire({
          title: 'Processing...',
          text: 'Please wait while we cancel your item.',
          allowOutsideClick: false,
          didOpen: () => {
            Swal.showLoading();
          }
        });

        try {
          const response = await fetch("/cancel-order", {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({ orderId, productId })
          });

          const data = await response.json();

          if (response.ok && data.message === "Item cancelled successfully") {
            await Swal.fire({
              title: "Cancelled!",
              text: "The product has been cancelled successfully.",
              icon: "success"
            });
            
            // Reload the page to reflect changes
            window.location.reload();
          } else {
            await Swal.fire({
              title: "Error",
              text: data.message || "Something went wrong",
              icon: "error"
            });
          }
        } catch (error) {
          console.error('Cancel error:', error);
          await Swal.fire({
            title: "Error", 
            text: "Network error occurred. Please try again.",
            icon: "error"
          });
        }
      }
    });
  });
});
</script>
