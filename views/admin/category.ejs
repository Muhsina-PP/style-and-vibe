<%- include("../../views/partial/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <style>
    .col-md-3 {
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 10px;
      margin: 10px;
    }

    .form-label {
      margin-bottom: 8px;
    }

    .form-control {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    .d-grid {
      margin-top: 20px;
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
      border: 1px solid #007bff;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    .pagination-container {
      text-align: center;
    }

    .pagination {
      display: inline-block;
    }

    .pagination a,
    .pagination .current-page {
      display: inline-block;
      padding: 5px 10px;
      margin: 0 2px;
      border: 1px solid #ddd;
      text-decoration: none;
      color: #333;
    }

    .pagination a:hover {
      background-color: #f5f5f5;
    }

    .error-message {
      color: red;
    }
    
  </style>
</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Category</h2>
      </div>
    </div>
    <header class="card-header text-center mb-20">
      <form action="/admin/category" method="get" class="d-inline">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px">
          <input type="text" class="form-control border-0 rounded-pill mt-3" placeholder="Search categories" name="search" />
          <button class="btn" type="submit">Search</button>

      <% if (search && search.length > 0) { %>
  <a href="/admin/category" 
     class="btn btn-secondary ms-2" 
     style="
        display: flex; 
        justify-content: center; 
        align-items: center; 
        padding: 5px 12px; 
        font-size: 13px; 
        border-radius: 5px; 
        margin-top: 20px;
        height: 30px;
     ">
     Clear
  </a>
<% } %>


          
        </div>
      </form>
    </header>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form method="post" action="/admin/addCategory" onsubmit=" return handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" />
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" ></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">
                  Create category
                </button>
              </div>
            </form>
          </div>
          <div class="col-md-8 ml-10">
            <div class="table-responsive" style="width: 620px;">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th class="text-center"></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th class="text-start">Edit</th>
                    <th>Delete</th>
                  </tr>
                </thead>
                <tbody>
                  <%cat.forEach((category, index)=>{%>
                  <tr>
                    <td></td>
                    <td class="text-start"><%=category.name%></td>
                    <td class="text-start"><%=category.description%></td>
                    <td>
                      <%if(category.categoryOffer){%>
                        <%=category.categoryOffer%>
                        <%}else{%>
                          0%
                      <%}%>
                    </td>
                    <td class="text-start">
                      <%if (category.categoryOffer===0){%>
                      <button class="btn btn-info" style="width: 100px">
                        <a href="#" class="text-white" onclick="addOffer('<%=category._id%>')">Add Offer</a>
                      </button>
                      <%}else{%>
                      <button class="btn btn-info"style="width: 100px">
                        <a href="#" class="text-white" onclick="removeOffer('<%=category._id%>')">Remove</a>
                      </button>
                      <%}%>
                    </td>

                    <td class="text-start">
                      <%if(category.isListed){%>
                      <span class="badge rounded-pill alert-success" style="width: 60px">Listed</span>
                      <%}else{%>
                      <span class="badge rounded-pill alert-danger" style="width: 60px">Unlisted</span>
                      <%}%>
                    </td>

                    <td class="text-start">
                      <%if(category.isListed){%>
                      <!-- <button class="btn btn-danger" style="width: 70px">
                        <a href="/admin/listCategory?id=" class="text-white">Unlist</a>
                      </button> -->
                      <button 
                        class="btn btn-danger list-btn" 
                        style="width: 70px"
                        data-id="<%= category._id %>" 
                        data-action="unlist">
                        Unlist
                      </button>
                      <%}else{%>
                      <!-- <button class="btn btn-success" style="width: 70px">
                        <a href="/admin/unlistCategory?id=" class="text-white">List</a>
                      </button> -->
                      <button 
                          class="btn btn-success list-btn" 
                          style="width: 70px"
                          data-id="<%= category._id %>" 
                          data-action="list">
                          List
                      </button>
                  

                      <%}%>
                    </td>
                    <td class="text-start">
                      <a href="/admin/editCategory?id=<%=category._id%>" class="btn btn-info text-white">Edit</a>
                    </td>
                    <!-- <td class="text-start">
                      <a href="/admin/deleteCategory?id=" class="btn btn-danger text-white">Delete</a>
                    </td> -->
                    <td class="text-start">
                      <button onclick="deleteCategory('<%= category._id %>')" class="btn btn-danger text-white">
                        Delete
                      </button>
                    </td>
                    
                  </tr>
                  <%})%>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="pagination-container d-flex justify-content-center align-items-center mt-4">
  <% for (let i = 1; i <= totalPages; i++) { %>
    <% if (i === currentPage) { %>
      <!-- Active Page -->
      <span class="btn btn-primary mx-1 active"><%= i %></span>
    <% } else { %>
      <!-- Other Pages -->
      <a href="?page=<%= i %>&search=<%= search %>"
         class="btn btn-outline-primary mx-1"><%= i %></a>
    <% } %>
  <% } %>
</div>


    

  </section>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

  <script>

    
    function handleFormSubmit(event){
      event.preventDefault();
      if(!validateForm()){
        return;
      }
      const name = document.getElementsByName("name")[0].value;
      const description = document.getElementById("descriptionId").value;

      fetch("/admin/addCategory", {

        method : "POST",
        headers : {
          'content-type' : "application/json"
        },
        body : JSON.stringify({name,description})
      })
      .then(response=>{
        if(!response.ok){
          return response.json().then(err =>{
            throw new Error(err.error)
          })
        }
        return response.json()
      })
      .then(data =>{
        location.reload()
      })
      .catch(error =>{
        if(error.message === "Category already exists"){
          Swal.fire({
            icon : "error",
            title : "Oops",
            text  : "Category already exists"
          })
        }else{
          Swal.fire({
            icon : "error",
            title : "Oops",
            text  : "An error occured while adding category, Category already exists"
          })
        }
      })
    }

    function validateForm(){
      clearErrorMessages();
      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim()
      let isValid = true;
      if(name === ""){
        displayErrorMessage("name-error", "Plz enter a name");
        isValid = false;
      }else if (!/^[A-Za-z]+$/.test(name)){
        displayErrorMessage("name-error", "Category names should only contain alphabetics")
        isValid = false;
      }
      if(description === ""){
        displayErrorMessage("description-error", "Plz enter description")
        isValid = false;
      }
      return isValid;
    }

    function displayErrorMessage(elementId, message){
      var errorElemet = document.getElementById(elementId)
      errorElemet.innerText = message;
      errorElemet.style.display = "block"
    }

    function clearErrorMessages(){
      const erroElements = document.getElementsByClassName("error-message")
      Array.from(erroElements).forEach((element)=>{
        element.innerText = "";
        element.style.display = "none";
      })
    }

    async function addOffer(categoryId){
      const {value :amount} = await Swal.fire({
        title : "Offer in percentage",
        input : "number",
        inputLabel : "Percentage",
        inputPlaceholder : "%"
      });
      if(amount){
        try {
          const response = await fetch ("/admin/addCategoryOffer", {
            method : "POST",
            headers : {
              'content-type' : "application/json",
            },
            body : JSON.stringify({
              percentage : amount, 
              categoryId : categoryId
            })
          });
          const data = await response.json();
          if(response.ok && data.status === true){
            Swal.fire(
              "Offer added",
              "The offer has been added",
              "success"
            ).then(()=>{
              location.reload();
            })
          }else{
            Swal.fire("Failed", data.message || "Adding offer failed", "error")
          }
        } catch (error) {
          Swal.fire(
            "Error",
            "An error occuered while adding offer",
            "error"
          )
          console.log("Error adding offer : ",error);         
        }
      }
    }


    async function removeOffer(categoryId){
      try {
        const response = await fetch ("/admin/removeCategoryOffer", {
            method : "POST",
            headers : {
              'content-type' : "application/json",
            },
            body : JSON.stringify({ 
              categoryId : categoryId
            })
          })
          const data = await response.json();
          if(response.ok && data.status === true){
            Swal.fire(
              "Offer removed",
              "The offer has been removed",
              "success"
            ).then(()=>{
              location.reload();
            })
          }else{
            Swal.fire("Failed", data.message || "Removing offer failed", "error")
          }
        }  
      catch (error) {
        Swal.fire(
            "Error",
            "An error occuered while adding offer",
            "error"
          )
          console.log("Error adding offer : ",error);  
      }     
  } 
  
 
  // 🔴 UNLIST category
document.querySelectorAll('.list-btn').forEach(button => {
  button.addEventListener('click', function () {
    const userId = this.getAttribute('data-id');

    Swal.fire({
      title: 'Are you sure?',
      text: "Do you want to unlist this item?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, unlist it!',
      cancelButtonText: 'Cancel'
    }).then((result) => {
      if (result.isConfirmed) {
        // ✅ Correct endpoint for UNLIST
        window.location.href = `/admin/unlistCategory?id=${userId}`;
      }
    });
  });
});

// 🟢 LIST category
document.querySelectorAll('.list-btn').forEach(button => {
  button.addEventListener('click', function () {
    const userId = this.getAttribute('data-id');

    Swal.fire({
      title: 'Are you sure?',
      text: "Do you want to list this item?",
      icon: 'success',
      showCancelButton: true,
      confirmButtonColor: '#28a745',
      cancelButtonColor: '#6c757d',
      confirmButtonText: 'Yes, list it!',
      cancelButtonText: 'Cancel'
    }).then((result) => {
      if (result.isConfirmed) {
        // ✅ Correct endpoint for LIST
        window.location.href = `/admin/listCategory?id=${userId}`;
      }
    });
  });
});

async function deleteCategory(categoryId) {
  const result = await Swal.fire({
    title: 'Are you sure?',
    text: "You won't be able to revert this!",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Yes, delete it!'
  });

  if (result.isConfirmed) {
    try {
      const response = await fetch(`/admin/deleteCategory/${categoryId}`, {
        method: 'DELETE'
      });

      const data = await response.json();

      if (data.success) {
        Swal.fire({
          title: 'Deleted!',
          text: data.message,
          icon: 'success',
          timer: 2000,
          showConfirmButton: false
        });
        setTimeout(() => {
          location.reload();
        }, 2000);
      } else {
        Swal.fire({
          title: 'Cannot Delete!',
          text: data.message,
          icon: 'error'
        });
      }

    } catch (error) {
      console.error('Error deleting category:', error);
      Swal.fire({
        title: 'Error!',
        text: 'An unexpected error occurred.',
        icon: 'error'
      });
    }
  }
}


  </script>
<%- include("../../views/partial/admin/footer") %>

